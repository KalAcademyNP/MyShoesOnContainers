version: "3.4"

networks:
   frontend:
   backend:

services:
   webmvc:
      build: 
         context: .\WebMvc
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         CatalogUrl: http://catalog
         IdentityUrl: http://10.10.10.157:5021
         CartUrl: http://cart
         OrderUrl: http://order
      container_name: webshop2
      ports:
         - "5201:80"
      networks:
         - frontend 
      depends_on:
         - catalog
         - tokenserver
         - cart
         - order

   catalog:
      build:
         context: .\ProductCatalogAPI
         dockerfile: Dockerfile
      image: shoes/catalogapi2
      environment:
         DatabaseServer: mssqlserver
         DatabaseName: CatalogDb
         DatabaseUser: sa
         DatabaseUserPassword: ProductApi(!)
      container_name: catalogapi2
      ports:
         - "5031:80"
      networks:
         - backend
         - frontend
      depends_on:
         - mssqlserver

   tokenserver:
      build: 
         context: .\TokenServiceApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         MvcClient: http://localhost:5201  
         BasketApiClient: http://localhost:5051
         OrderApiClient: http://localhost:5601
      container_name: tokenserviceapi2
      ports:
         - "5021:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - mssqlserver

   cart:
      image: cartimage
      build: 
         context: .\CartApi
         dockerfile: Dockerfile
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
      container_name: cartapi2
      ports:
         - "5051:80"
      networks:
         - backend
         - frontend 
      depends_on:
         - basket.data
         - tokenserver
         - rabbitmq

   order:
      image: shoes/order
      build: 
         context: .\OrderApi
         dockerfile: Dockerfile
    
      environment: 
         ASPNETCORE_ENVIRONMENT: Development 
         IdentityUrl: http://tokenserver
         SQLSERVER_HOST: mssqlcontainer2
         SA_PASSWORD: ProductApi(!)
         DATABASE: OrdersDb
      container_name: orderapi2
      ports:
         - "5601:80"
      networks:
         - backend
         - frontend 
      depends_on:
        - mssqlserver
        - tokenserver 
        - rabbitmq

   mssqlserver:
      image: "microsoft/mssql-server-linux:2017-latest"
      ports:
         - "1446:1433"

      container_name: mssqlcontainer2
      environment:
         ACCEPT_EULA: Y
         SA_PASSWORD: ProductApi(!)
      networks:
         - backend


   basket.data:
      image: redis
      ports:
         - "6378:6379"  
      networks:
         - backend 

   rabbitmq:
      image: rabbitmq:3-management
      container_name: rabbitmq
      hostname: myrabbitmq
      ports:
         - "15672:15672"
         - "5672:5672"
         - "5671:5671"
      volumes:
         - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
      networks:
        - backend 
